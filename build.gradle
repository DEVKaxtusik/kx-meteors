plugins {
    id 'java'
    id("com.gradleup.shadow") version "9.0.0-beta9"
}

group = 'pl.kaxtusik'
version = '2.0-RELEASE'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url = "https://repo.panda-lang.org/releases"
    }
    maven {
        name = "jitpack"
        url = "https://jitpack.io"
    }
    maven {
        url = "https://storehouse.okaeri.eu/repository/maven-public/"
    }
    maven {
        url = "https://repo.alessiodp.com/releases/"
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.18.2-R0.1-SNAPSHOT")
    implementation 'dev.rollczi:litecommands-bukkit:3.9.7'
    implementation "com.github.technicallycoded:FoliaLib:main-SNAPSHOT"
    implementation 'eu.okaeri:okaeri-configs-yaml-bukkit:5.0.6'
    implementation 'eu.okaeri:okaeri-configs-serdes-bukkit:5.0.6'
    implementation 'com.google.inject:guice:7.0.0'
    implementation 'net.byteflux:libby-bukkit:1.3.1'
}

shadowJar {
    relocate "com.tcoded.folialib", "pl.kaxtusik.meteor.lib.folialib"
    relocate "dev.rollczi.litecommands", "pl.kaxtusik.meteor.lib.litecommands"
    relocate "eu.okaeri.configs", "pl.kaxtusik.meteor.lib.okaeri-configs"
    relocate "com.google", "pl.kaxtusik.meteor.lib.guice"
    relocate "jakarta.inject", "pl.kaxtusik.meteor.lib.jakarta"
    relocate "javax.annotation", "pl.kaxtusik.meteor.lib.annotation"
    relocate "org", "pl.kaxtusik.meteor.lib.utils"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
